<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.org.system.dao.manager.PermissionMapper">
	<resultMap id="BaseResultMap" type="com.org.system.model.manager.Permission" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="perm_code" property="permCode" jdbcType="VARCHAR" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.org.system.model.manager.Permission" extends="BaseResultMap" >
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, pid, name, type, sort, url, perm_code, icon, state
  </sql>
  <sql id="Blob_Column_List" >
    description
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from permission
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from permission
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.org.system.model.manager.Permission" >
    insert into permission (id, pid, name, 
      type, sort, url, perm_code, 
      icon, state, description
      )
    values (#{id,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{permCode,jdbcType=VARCHAR}, 
      #{icon,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.org.system.model.manager.Permission" >
    insert into permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="permCode != null" >
        perm_code,
      </if>
      <if test="icon != null" >
        icon,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="permCode != null" >
        #{permCode,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.org.system.model.manager.Permission" >
    update permission
    <set >
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="permCode != null" >
        perm_code = #{permCode,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.org.system.model.manager.Permission" >
    update permission
    set pid = #{pid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      perm_code = #{permCode,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.org.system.model.manager.Permission" >
    update permission
    set pid = #{pid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      perm_code = #{permCode,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
	
	
	
	<!-- 查询  List 查询 -->
	<select id="getPermissions" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
		 SELECT
		 p.id,	p.pid,	p.name,	p.type,	p.sort,	p.url,	p.perm_code,	p.icon,	p.state,	p.description
		 FROM permission p
		 INNER JOIN role_permission rp on p.ID=rp.PERMISSION_ID
		 INNER JOIN role r ON  r.id=rp.ROLE_ID
		 INNER JOIN user_role  ur ON ur.ROLE_ID =rp.ROLE_ID 
		 INNER JOIN user u ON u.id = ur.USER_ID 
		 where u.id=#{id} order by p.sort
	</select>
	
	<select id="getMenus" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
		 SELECT
		 p.id,	p.pid,	p.name,	p.type,	p.sort,	p.url,	p.perm_code,	p.icon,	p.state,	p.description
		 FROM permission p
		 INNER JOIN role_permission rp on p.ID=rp.PERMISSION_ID
		 INNER JOIN role r ON  r.id=rp.ROLE_ID
		 INNER JOIN user_role  ur ON ur.ROLE_ID =rp.ROLE_ID 
		 INNER JOIN user u ON u.id = ur.USER_ID 
		 where p.TYPE='F'  
		 <if test="id != null and id != '' ">
				 and u.id = #{id}
		 </if>
		 order by p.sort
	</select>
	
	<select id="getMenuOperation" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
		 SELECT
		 p.id,	p.pid,	p.name,	p.type,	p.sort,	p.url,	p.perm_code,	p.icon,	p.state,	p.description
		 FROM permission p
		 where p.TYPE='O' and p.PID=#{id} order by p.SORT
	</select>

</mapper>