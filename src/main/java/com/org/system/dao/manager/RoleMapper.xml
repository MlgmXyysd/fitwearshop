<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.org.system.dao.manager.RoleMapper">

	<resultMap id="BaseResultMap" type="com.org.system.model.manager.Role">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="role_code" property="roleCode" jdbcType="VARCHAR" />
		<result column="sort" property="sort" jdbcType="SMALLINT" />
		<result column="del_flag" property="delFlag" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="com.org.system.model.manager.Role"
		extends="BaseResultMap">
		<result column="description" property="description" jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, name, role_code, sort, del_flag
	</sql>
	<sql id="Blob_Column_List">
		description
	</sql>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from role
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from role
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.org.system.model.manager.Role">
		insert into role (id, name, role_code,
		sort, del_flag, description
		)
		values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{roleCode,jdbcType=VARCHAR},
		#{sort,jdbcType=SMALLINT}, #{delFlag,jdbcType=VARCHAR}, #{description,jdbcType=LONGVARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.org.system.model.manager.Role">
		insert into role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="roleCode != null">
				role_code,
			</if>
			<if test="sort != null">
				sort,
			</if>
			<if test="delFlag != null">
				del_flag,
			</if>
			<if test="description != null">
				description,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="roleCode != null">
				#{roleCode,jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				#{sort,jdbcType=SMALLINT},
			</if>
			<if test="delFlag != null">
				#{delFlag,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.org.system.model.manager.Role">
		update role
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="roleCode != null">
				role_code = #{roleCode,jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				sort = #{sort,jdbcType=SMALLINT},
			</if>
			<if test="delFlag != null">
				del_flag = #{delFlag,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.org.system.model.manager.Role">
		update role
		set name = #{name,jdbcType=VARCHAR},
		role_code = #{roleCode,jdbcType=VARCHAR},
		sort = #{sort,jdbcType=SMALLINT},
		del_flag = #{delFlag,jdbcType=VARCHAR},
		description = #{description,jdbcType=LONGVARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.org.system.model.manager.Role">
		update role
		set name = #{name,jdbcType=VARCHAR},
		role_code = #{roleCode,jdbcType=VARCHAR},
		sort = #{sort,jdbcType=SMALLINT},
		del_flag = #{delFlag,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<sql id="modelwheresql">
		<where>
			<if test="name != null">
				and name = #{name,jdbcType=VARCHAR}
			</if>
			<if test="roleCode != null">
				and role_code = #{roleCode,jdbcType=VARCHAR}
			</if>
			<if test="sort != null">
				and sort = #{sort,jdbcType=SMALLINT}
			</if>
			<if test="delFlag != null">
				and del_flag = #{delFlag,jdbcType=VARCHAR}
			</if>
		</where>
	</sql>
	<select id="queryPageCount" resultType="java.lang.Long"
		parameterType="com.org.system.model.manager.Role">
		SELECT
		count(1)
		FROM role
		WHERE 1=1
		<include refid="modelwheresql" />
	</select>
	
	<select id="queryPageList" resultMap="ResultMapWithBLOBs"
		parameterType="com.org.system.model.manager.Page">
		SELECT
		id, name, role_code, sort, del_flag,description
		FROM role
		WHERE 1=1
		<if test="param != null">
			<if test="param.name != null">
				and name = #{param.name,jdbcType=VARCHAR}
			</if>
			<if test="param.roleCode != null">
				and role_code = #{param.roleCode,jdbcType=VARCHAR}
			</if>
			<if test="param.sort != null">
				and sort = #{param.sort,jdbcType=SMALLINT}
			</if>
			<if test="param.delFlag != null">
				and del_flag = #{param.delFlag,jdbcType=VARCHAR}
			</if>
		</if>
		<if test="pageSize != null and first != null">
			limit #{first,jdbcType=INTEGER},#{pageSize ,jdbcType=INTEGER}
		</if>
	</select>
	
	<select id="queryList" resultMap="ResultMapWithBLOBs"
		parameterType="com.org.system.model.manager.Role">
		SELECT
		id, name, role_code, sort, del_flag,description
		FROM role
		WHERE 1=1
		<include refid="modelwheresql" />
	</select>
	
</mapper>