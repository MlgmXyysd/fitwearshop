<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.org.system.dao.manager.UserMapper">
	<resultMap id="BaseResultMap" type="com.org.system.model.manager.User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="login_name" property="loginName" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="salt" property="salt" jdbcType="VARCHAR" />
		<result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
		<result column="gender" property="gender" jdbcType="INTEGER" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="icon" property="icon" jdbcType="VARCHAR" />
		<result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
		<result column="state" property="state" jdbcType="CHAR" />
		<result column="login_count" property="loginCount" jdbcType="INTEGER" />
		<result column="previous_visit" property="previousVisit"
			jdbcType="TIMESTAMP" />
		<result column="last_visit" property="lastVisit" jdbcType="TIMESTAMP" />
		<result column="del_flag" property="delFlag" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="com.org.system.model.manager.User"
		extends="BaseResultMap">
		<result column="description" property="description" jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, login_name, name, password, salt, birthday, gender,
		email, phone,
		icon, create_date,
		state, login_count, previous_visit,
		last_visit, del_flag
	</sql>
	<sql id="Blob_Column_List">
		description
	</sql>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.org.system.model.manager.User">
		insert into user (id,
		login_name, name,
		password, salt, birthday,
		gender, email, phone,
		icon,
		create_date, state,
		login_count, previous_visit, last_visit,
		del_flag,
		description)
		values (#{id,jdbcType=INTEGER},
		#{loginName,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR},
		#{birthday,jdbcType=TIMESTAMP},
		#{gender,jdbcType=SMALLINT},
		#{email,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR},
		#{icon,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP},
		#{state,jdbcType=CHAR},
		#{loginCount,jdbcType=INTEGER},
		#{previousVisit,jdbcType=TIMESTAMP},
		#{lastVisit,jdbcType=TIMESTAMP},
		#{delFlag,jdbcType=VARCHAR}, #{description,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.org.system.model.manager.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="loginName != null">
				login_name,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="salt != null">
				salt,
			</if>
			<if test="birthday != null">
				birthday,
			</if>
			<if test="gender != null">
				gender,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="icon != null">
				icon,
			</if>
			<if test="createDate != null">
				create_date,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="loginCount != null">
				login_count,
			</if>
			<if test="previousVisit != null">
				previous_visit,
			</if>
			<if test="lastVisit != null">
				last_visit,
			</if>
			<if test="delFlag != null">
				del_flag,
			</if>
			<if test="description != null">
				description,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="loginName != null">
				#{loginName,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				#{salt,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				#{birthday,jdbcType=TIMESTAMP},
			</if>
			<if test="gender != null">
				#{gender,jdbcType=SMALLINT},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="icon != null">
				#{icon,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="state != null">
				#{state,jdbcType=CHAR},
			</if>
			<if test="loginCount != null">
				#{loginCount,jdbcType=INTEGER},
			</if>
			<if test="previousVisit != null">
				#{previousVisit,jdbcType=TIMESTAMP},
			</if>
			<if test="lastVisit != null">
				#{lastVisit,jdbcType=TIMESTAMP},
			</if>
			<if test="delFlag != null">
				#{delFlag,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.org.system.model.manager.User">
		update user
		<set>
			<if test="loginName != null">
				login_name = #{loginName,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				salt = #{salt,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				birthday = #{birthday,jdbcType=TIMESTAMP},
			</if>
			<if test="gender != null">
				gender = #{gender,jdbcType=SMALLINT},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="icon != null">
				icon = #{icon,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				create_date = #{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=CHAR},
			</if>
			<if test="loginCount != null">
				login_count = #{loginCount,jdbcType=INTEGER},
			</if>
			<if test="previousVisit != null">
				previous_visit = #{previousVisit,jdbcType=TIMESTAMP},
			</if>
			<if test="lastVisit != null">
				last_visit = #{lastVisit,jdbcType=TIMESTAMP},
			</if>
			<if test="delFlag != null">
				del_flag = #{delFlag,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.org.system.model.manager.User">
		update
		user
		set login_name = #{loginName,jdbcType=VARCHAR},
		name =
		#{name,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		salt
		= #{salt,jdbcType=VARCHAR},
		birthday = #{birthday,jdbcType=TIMESTAMP},
		gender = #{gender,jdbcType=SMALLINT},
		email =
		#{email,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		icon =
		#{icon,jdbcType=VARCHAR},
		create_date =
		#{createDate,jdbcType=TIMESTAMP},
		state = #{state,jdbcType=CHAR},
		login_count = #{loginCount,jdbcType=INTEGER},
		previous_visit =
		#{previousVisit,jdbcType=TIMESTAMP},
		last_visit =
		#{lastVisit,jdbcType=TIMESTAMP},
		del_flag =
		#{delFlag,jdbcType=VARCHAR},
		description =
		#{description,jdbcType=LONGVARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.org.system.model.manager.User">
		update user
		set
		login_name = #{loginName,jdbcType=VARCHAR},
		name =
		#{name,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		salt
		= #{salt,jdbcType=VARCHAR},
		birthday = #{birthday,jdbcType=TIMESTAMP},
		gender = #{gender,jdbcType=SMALLINT},
		email =
		#{email,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		icon =
		#{icon,jdbcType=VARCHAR},
		create_date =
		#{createDate,jdbcType=TIMESTAMP},
		state = #{state,jdbcType=CHAR},
		login_count = #{loginCount,jdbcType=INTEGER},
		previous_visit =
		#{previousVisit,jdbcType=TIMESTAMP},
		last_visit =
		#{lastVisit,jdbcType=TIMESTAMP},
		del_flag = #{delFlag,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- 查询（根据主键ID查询） -->
	<select id="selectByUserName" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.String">
		SELECT
		id, login_name, name, password, salt, birthday,
		gender, email, phone,
		icon, create_date, state, description,
		login_count, previous_visit,
		last_visit, del_flag
		FROM user
		WHERE
		login_name = #{loginName,jdbcType=VARCHAR}
	</select>

	 <sql id="modelwheresql">
		<where>
			<if test="loginName != null">
				and login_name = #{loginName,jdbcType=VARCHAR}
			</if>
			<if test="name != null">
				and name = #{name,jdbcType=VARCHAR}
			</if>
			<if test="password != null">
				and password = #{password,jdbcType=VARCHAR}
			</if>
			<if test="salt != null">
				and salt = #{salt,jdbcType=VARCHAR}
			</if>
			<if test="birthday != null">
				and birthday = #{birthday,jdbcType=TIMESTAMP}
			</if>
			<if test="gender != null">
				and gender = #{gender,jdbcType=SMALLINT}
			</if>
			<if test="email != null">
				and email = #{email,jdbcType=VARCHAR}
			</if>
			<if test="phone != null">
				and phone = #{phone,jdbcType=VARCHAR}
			</if>
			<if test="icon != null">
				and icon = #{icon,jdbcType=VARCHAR}
			</if>
			<if test="createDate != null">
				and create_date = #{createDate,jdbcType=TIMESTAMP}
			</if>
			<if test="state != null">
				and state = #{state,jdbcType=CHAR}
			</if>
			<if test="loginCount != null">
				and login_count = #{loginCount,jdbcType=INTEGER}
			</if>
			<if test="previousVisit != null">
				and previous_visit = #{previousVisit,jdbcType=TIMESTAMP}
			</if>
			<if test="lastVisit != null">
				and last_visit = #{lastVisit,jdbcType=TIMESTAMP}
			</if>
			<if test="delFlag != null">
				and del_flag = #{delFlag,jdbcType=VARCHAR}
			</if>
			<if test="description != null">
				and description = #{description,jdbcType=LONGVARCHAR}
			</if>
		</where>
	</sql>
	<select id="queryPageCount" resultType="java.lang.Long"
		parameterType="com.org.system.model.manager.User">
		SELECT
		count(1)
		FROM user
		WHERE 1=1
		<include refid="modelwheresql" />
	</select>
	
	<select id="queryPageList" resultMap="ResultMapWithBLOBs"
		parameterType="com.org.system.model.manager.Page">
		SELECT
		id, login_name, name, password, salt, birthday,
		gender, email, phone,
		icon, create_date, state, description,
		login_count, previous_visit,
		last_visit, del_flag
		FROM user
		WHERE 1=1
		<if test="param != null">
			<if test="param.name != null">
				and name like CONCAT('%',#{param.name,jdbcType=VARCHAR},'%')
			</if>
			<if test="param.phone != null">
				and phone = #{param.phone,jdbcType=VARCHAR}
			</if>
			<if test="param.createDate != null">
				and create_date &gt;= #{param.createDateBg,jdbcType=TIMESTAMP}
			</if>
			<if test="param.createDate != null">
				and create_date &lt;= #{param.createDateEg,jdbcType=TIMESTAMP}
			</if>
		</if>
		<if test="pageSize != null and first != null">
				limit #{first,jdbcType=INTEGER},#{pageSize ,jdbcType=INTEGER}
		</if>
	</select>
	
	<select id="queryList" resultMap="ResultMapWithBLOBs"
		parameterType="com.org.system.model.manager.User">
		SELECT
		id, login_name, name, password, salt, birthday,
		gender, email, phone,
		icon, create_date, state, description,
		login_count, previous_visit,
		last_visit, del_flag
		FROM user
		WHERE 1=1
		<include refid="modelwheresql" />
	</select>

</mapper>