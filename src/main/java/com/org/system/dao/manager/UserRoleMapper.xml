<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.org.system.dao.manager.UserRoleMapper">

	<resultMap id="BaseResultMap" type="com.org.system.model.manager.UserRole">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="role_id" property="roleId" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, user_id, role_id
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user_role
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user_role
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.org.system.model.manager.UserRole">
		insert into user_role (id, user_id, role_id
		)
		values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
		#{roleId,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.org.system.model.manager.UserRole">
		insert into user_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="roleId != null">
				role_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="roleId != null">
				#{roleId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.org.system.model.manager.UserRole">
		update user_role
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="roleId != null">
				role_id = #{roleId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.org.system.model.manager.UserRole">
		update user_role
		set user_id = #{userId,jdbcType=INTEGER},
		role_id = #{roleId,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- 查询 List 查询 -->
	<select id="findRoleIds" resultType="java.lang.Integer"
		parameterType="java.lang.Integer">
		SELECT
		role_id
		FROM user_role
		WHERE
		user_id =
		#{userId}
	</select>

	<delete id="deleteRP" parameterType="com.org.system.model.manager.UserRole">
		delete from user_role
		where
		user_id = #{userId}
		and role_id = #{roleId}
	</delete>
	
	<delete id="deleteByUserId" parameterType="java.lang.Integer">
		delete from user_role
		where user_id = #{userId,jdbcType=INTEGER}
	</delete>
	
	<delete id="deleteByRoleId" parameterType="java.lang.Integer">
		delete from user_role
		where role_id = #{roleId,jdbcType=INTEGER}
	</delete>
	
	<sql id="modelwheresql">
		<where>
			1=1
			<if test="id != null">
				and id = #{id,jdbcType=INTEGER}
			</if>
			<if test="userId != null">
				and user_id = #{userId,jdbcType=INTEGER}
			</if>
			<if test="roleId != null">
				and role_id = #{roleId,jdbcType=INTEGER}
			</if>
		</where>
	</sql>
	<select id="queryPageCount" resultType="java.lang.Long"
		parameterType="com.org.system.model.manager.UserRole">
		SELECT
		count(1)
		FROM user_role
		WHERE 
		<include refid="modelwheresql" />
	</select>
	
	<select id="queryPageList" resultMap="BaseResultMap"
		parameterType="com.org.system.model.manager.Page">
		SELECT
		id, user_id, role_id
		FROM user_role
		WHERE 1=1
		<if test="param != null">
			<if test="param.id != null">
				and id = #{param.id,jdbcType=INTEGER}
			</if>
			<if test="param.userId != null">
				and user_id = #{param.userId,jdbcType=INTEGER}
			</if>
			<if test="param.roleId != null">
				and role_id = #{param.roleId,jdbcType=INTEGER}
			</if>
		</if>
		<if test="pageSize != null and first != null">
			limit #{first,jdbcType=INTEGER},#{pageSize ,jdbcType=INTEGER}
		</if>
	</select>
	
	<select id="queryList" resultMap="BaseResultMap"
		parameterType="com.org.system.model.manager.UserRole">
		SELECT
		id, user_id, role_id
		FROM user_role
		WHERE 1=1
		<include refid="modelwheresql" />
	</select>

</mapper>